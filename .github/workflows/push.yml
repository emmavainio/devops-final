name: Push workflow, tests, deploy to prod if master

on:   
  push:
    branches:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:        
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Make Gradle Wrapper script executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
      with:
        arguments: build

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Make Gradle Wrapper script executable
      run: chmod +x ./gradlew
    - name: Run Unit Test
      run: ./gradlew test

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Make Gradle Wrapper script executable
      run: chmod +x ./gradlew
    - name: Run Integration Tests
      run: ./gradlew integrationTest

  build-and-push-image:
    if: github.ref == 'refs/heads/master'
    needs: [build, unit-test, integration-test]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    
    - name: Make Gradle Wrapper script executable
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref }}
        labels: ${{ steps.meta.outputs.labels }}
  
  fake-deploy-prod:
    if: github.ref == 'refs/heads/master'
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
        - name: echo deploy
          run: |
            run: |
            IMAGE_NAME="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref }}"
            echo "Deploying to prod: $IMAGE_NAME"
